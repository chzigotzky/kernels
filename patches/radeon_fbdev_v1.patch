diff -rupN a/drivers/gpu/drm/arm/malidp_drv.c b/drivers/gpu/drm/arm/malidp_drv.c
--- a/drivers/gpu/drm/arm/malidp_drv.c	2025-08-04 14:25:43.933840890 +0200
+++ b/drivers/gpu/drm/arm/malidp_drv.c	2025-08-04 14:12:52.737134949 +0200
@@ -325,8 +325,7 @@ malidp_verify_afbc_framebuffer_size(stru
 		return false;
 	}
 
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 
 	n_superblocks = (mode_cmd->width / afbc_superblock_width) *
 		(mode_cmd->height / afbc_superblock_height);
diff -rupN a/drivers/gpu/drm/armada/armada_fb.c b/drivers/gpu/drm/armada/armada_fb.c
--- a/drivers/gpu/drm/armada/armada_fb.c	2025-08-04 14:25:43.933840890 +0200
+++ b/drivers/gpu/drm/armada/armada_fb.c	2025-08-04 14:12:52.741134911 +0200
@@ -86,9 +86,7 @@ struct armada_framebuffer *armada_frameb
 struct drm_framebuffer *armada_fb_create(struct drm_device *dev,
 	struct drm_file *dfile, const struct drm_mode_fb_cmd2 *mode)
 {
-	const struct drm_format_info *info = drm_get_format_info(dev,
-								 mode->pixel_format,
-								 mode->modifier[0]);
+	const struct drm_format_info *info = drm_get_format_info(dev, mode);
 	struct armada_gem_object *obj;
 	struct armada_framebuffer *dfb;
 	int ret;
diff -rupN a/drivers/gpu/drm/drm_fourcc.c b/drivers/gpu/drm/drm_fourcc.c
--- a/drivers/gpu/drm/drm_fourcc.c	2025-08-04 11:24:19.568186482 +0200
+++ b/drivers/gpu/drm/drm_fourcc.c	2025-08-04 14:12:52.741134911 +0200
@@ -417,8 +417,7 @@ EXPORT_SYMBOL(drm_format_info);
 /**
  * drm_get_format_info - query information for a given framebuffer configuration
  * @dev: DRM device
- * @pixel_format: pixel format (DRM_FORMAT_*)
- * @modifier: modifier
+ * @mode_cmd: metadata from the userspace fb creation request
  *
  * Returns:
  * The instance of struct drm_format_info that describes the pixel format, or
@@ -426,16 +425,16 @@ EXPORT_SYMBOL(drm_format_info);
  */
 const struct drm_format_info *
 drm_get_format_info(struct drm_device *dev,
-		    u32 pixel_format, u64 modifier)
+		    const struct drm_mode_fb_cmd2 *mode_cmd)
 {
 	const struct drm_format_info *info = NULL;
 
 	if (dev->mode_config.funcs->get_format_info)
-		info = dev->mode_config.funcs->get_format_info(pixel_format,
-							       modifier);
+		info = dev->mode_config.funcs->get_format_info(mode_cmd->pixel_format,
+							       mode_cmd->modifier[0]);
 
 	if (!info)
-		info = drm_format_info(pixel_format);
+		info = drm_format_info(mode_cmd->pixel_format);
 
 	return info;
 }
diff -rupN a/drivers/gpu/drm/drm_framebuffer.c b/drivers/gpu/drm/drm_framebuffer.c
--- a/drivers/gpu/drm/drm_framebuffer.c	2025-08-04 14:25:43.949840738 +0200
+++ b/drivers/gpu/drm/drm_framebuffer.c	2025-08-04 14:12:52.741134911 +0200
@@ -176,7 +176,7 @@ static int framebuffer_check(struct drm_
 	}
 
 	/* now let the driver pick its own format info */
-	info = drm_get_format_info(dev, r->pixel_format, r->modifier[0]);
+	info = drm_get_format_info(dev, r);
 
 	for (i = 0; i < info->num_planes; i++) {
 		unsigned int width = drm_format_info_plane_width(info, r->width, i);
diff -rupN a/drivers/gpu/drm/drm_gem_framebuffer_helper.c b/drivers/gpu/drm/drm_gem_framebuffer_helper.c
--- a/drivers/gpu/drm/drm_gem_framebuffer_helper.c	2025-08-04 14:25:43.949840738 +0200
+++ b/drivers/gpu/drm/drm_gem_framebuffer_helper.c	2025-08-04 14:12:52.745134873 +0200
@@ -160,8 +160,7 @@ int drm_gem_fb_init_with_funcs(struct dr
 	unsigned int i;
 	int ret;
 
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 	if (!info) {
 		drm_dbg_kms(dev, "Failed to get FB format info\n");
 		return -EINVAL;
@@ -503,8 +502,7 @@ static __u32 drm_gem_afbc_get_bpp(struct
 {
 	const struct drm_format_info *info;
 
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 
 	switch (info->format) {
 	case DRM_FORMAT_YUV420_8BIT:
@@ -602,8 +600,7 @@ int drm_gem_fb_afbc_init(struct drm_devi
 	int ret;
 
 	objs = afbc_fb->base.obj;
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 	if (!info)
 		return -EINVAL;
 
diff -rupN a/drivers/gpu/drm/drm_modeset_helper.c b/drivers/gpu/drm/drm_modeset_helper.c
--- a/drivers/gpu/drm/drm_modeset_helper.c	2025-08-04 14:25:43.953840701 +0200
+++ b/drivers/gpu/drm/drm_modeset_helper.c	2025-08-04 14:12:52.745134873 +0200
@@ -86,8 +86,7 @@ void drm_helper_mode_fill_fb_struct(stru
 	int i;
 
 	fb->dev = dev;
-	fb->format = drm_get_format_info(dev, mode_cmd->pixel_format,
-					 mode_cmd->modifier[0]);
+	fb->format = drm_get_format_info(dev, mode_cmd);
 	fb->width = mode_cmd->width;
 	fb->height = mode_cmd->height;
 	for (i = 0; i < 4; i++) {
diff -rupN a/drivers/gpu/drm/exynos/exynos_drm_fb.c b/drivers/gpu/drm/exynos/exynos_drm_fb.c
--- a/drivers/gpu/drm/exynos/exynos_drm_fb.c	2025-08-04 14:25:43.965840587 +0200
+++ b/drivers/gpu/drm/exynos/exynos_drm_fb.c	2025-08-04 14:12:52.745134873 +0200
@@ -96,9 +96,7 @@ static struct drm_framebuffer *
 exynos_user_fb_create(struct drm_device *dev, struct drm_file *file_priv,
 		      const struct drm_mode_fb_cmd2 *mode_cmd)
 {
-	const struct drm_format_info *info = drm_get_format_info(dev,
-								 mode_cmd->pixel_format,
-								 mode_cmd->modifier[0]);
+	const struct drm_format_info *info = drm_get_format_info(dev, mode_cmd);
 	struct exynos_drm_gem *exynos_gem[MAX_FB_BUFFER];
 	struct drm_framebuffer *fb;
 	int i;
diff -rupN a/drivers/gpu/drm/gma500/framebuffer.c b/drivers/gpu/drm/gma500/framebuffer.c
--- a/drivers/gpu/drm/gma500/framebuffer.c	2025-08-04 14:25:43.969840550 +0200
+++ b/drivers/gpu/drm/gma500/framebuffer.c	2025-08-04 14:12:52.745134873 +0200
@@ -39,8 +39,7 @@ static int psb_framebuffer_init(struct d
 	 * Reject unknown formats, YUV formats, and formats with more than
 	 * 4 bytes per pixel.
 	 */
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 	if (!info || !info->depth || info->cpp[0] > 4)
 		return -EINVAL;
 
diff -rupN a/drivers/gpu/drm/mediatek/mtk_drm_drv.c b/drivers/gpu/drm/mediatek/mtk_drm_drv.c
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.c	2025-08-04 14:25:44.001840247 +0200
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.c	2025-08-04 14:12:52.749134836 +0200
@@ -45,9 +45,7 @@ mtk_drm_mode_fb_create(struct drm_device
 		       struct drm_file *file,
 		       const struct drm_mode_fb_cmd2 *cmd)
 {
-	const struct drm_format_info *info = drm_get_format_info(dev,
-								 cmd->pixel_format,
-								 cmd->modifier[0]);
+	const struct drm_format_info *info = drm_get_format_info(dev, cmd);
 
 	if (info->num_planes != 1)
 		return ERR_PTR(-EINVAL);
diff -rupN a/drivers/gpu/drm/msm/msm_fb.c b/drivers/gpu/drm/msm/msm_fb.c
--- a/drivers/gpu/drm/msm/msm_fb.c	2025-08-04 14:25:44.005840211 +0200
+++ b/drivers/gpu/drm/msm/msm_fb.c	2025-08-04 14:12:52.749134836 +0200
@@ -142,8 +142,7 @@ struct drm_framebuffer *msm_framebuffer_
 		struct drm_file *file, const struct drm_mode_fb_cmd2 *mode_cmd)
 {
 	const struct drm_format_info *info = drm_get_format_info(dev,
-								 mode_cmd->pixel_format,
-								 mode_cmd->modifier[0]);
+								 mode_cmd);
 	struct drm_gem_object *bos[4] = {0};
 	struct drm_framebuffer *fb;
 	int ret, i, n = info->num_planes;
@@ -174,8 +173,7 @@ static struct drm_framebuffer *msm_frame
 		const struct drm_mode_fb_cmd2 *mode_cmd, struct drm_gem_object **bos)
 {
 	const struct drm_format_info *info = drm_get_format_info(dev,
-								 mode_cmd->pixel_format,
-								 mode_cmd->modifier[0]);
+								 mode_cmd);
 	struct msm_drm_private *priv = dev->dev_private;
 	struct msm_kms *kms = priv->kms;
 	struct msm_framebuffer *msm_fb = NULL;
diff -rupN a/drivers/gpu/drm/mxsfb/mxsfb_drv.c b/drivers/gpu/drm/mxsfb/mxsfb_drv.c
--- a/drivers/gpu/drm/mxsfb/mxsfb_drv.c	2025-08-04 14:25:44.013840135 +0200
+++ b/drivers/gpu/drm/mxsfb/mxsfb_drv.c	2025-08-04 14:12:52.749134836 +0200
@@ -95,8 +95,7 @@ mxsfb_fb_create(struct drm_device *dev,
 {
 	const struct drm_format_info *info;
 
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 	if (!info)
 		return ERR_PTR(-EINVAL);
 
diff -rupN a/drivers/gpu/drm/nouveau/nouveau_display.c b/drivers/gpu/drm/nouveau/nouveau_display.c
--- a/drivers/gpu/drm/nouveau/nouveau_display.c	2025-08-04 14:25:44.017840097 +0200
+++ b/drivers/gpu/drm/nouveau/nouveau_display.c	2025-08-04 14:12:52.749134836 +0200
@@ -295,8 +295,7 @@ nouveau_framebuffer_new(struct drm_devic
 		kind = nvbo->kind;
 	}
 
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 
 	for (i = 0; i < info->num_planes; i++) {
 		height = drm_format_info_plane_height(info,
diff -rupN a/drivers/gpu/drm/omapdrm/omap_fb.c b/drivers/gpu/drm/omapdrm/omap_fb.c
--- a/drivers/gpu/drm/omapdrm/omap_fb.c	2025-08-04 14:25:44.025840022 +0200
+++ b/drivers/gpu/drm/omapdrm/omap_fb.c	2025-08-04 14:12:52.753134797 +0200
@@ -338,8 +338,7 @@ struct drm_framebuffer *omap_framebuffer
 		struct drm_file *file, const struct drm_mode_fb_cmd2 *mode_cmd)
 {
 	const struct drm_format_info *info = drm_get_format_info(dev,
-								 mode_cmd->pixel_format,
-								 mode_cmd->modifier[0]);
+								 mode_cmd);
 	unsigned int num_planes = info->num_planes;
 	struct drm_gem_object *bos[4];
 	struct drm_framebuffer *fb;
@@ -379,8 +378,7 @@ struct drm_framebuffer *omap_framebuffer
 			dev, mode_cmd, mode_cmd->width, mode_cmd->height,
 			(char *)&mode_cmd->pixel_format);
 
-	format = drm_get_format_info(dev, mode_cmd->pixel_format,
-				     mode_cmd->modifier[0]);
+	format = drm_get_format_info(dev, mode_cmd);
 
 	for (i = 0; i < ARRAY_SIZE(formats); i++) {
 		if (formats[i] == mode_cmd->pixel_format)
diff -rupN a/drivers/gpu/drm/radeon/radeon_fbdev.c b/drivers/gpu/drm/radeon/radeon_fbdev.c
--- a/drivers/gpu/drm/radeon/radeon_fbdev.c	2025-08-04 11:24:21.268276185 +0200
+++ b/drivers/gpu/drm/radeon/radeon_fbdev.c	2025-08-04 14:12:52.753134797 +0200
@@ -67,8 +67,7 @@ static int radeon_fbdev_create_pinned_ob
 	int height = mode_cmd->height;
 	u32 cpp;
 
-	info = drm_get_format_info(rdev_to_drm(rdev), mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(rdev_to_drm(rdev), mode_cmd);
 	cpp = info->cpp[0];
 
 	/* need to align pitch with crtc limits */
diff -rupN a/drivers/gpu/drm/rockchip/rockchip_drm_fb.c b/drivers/gpu/drm/rockchip/rockchip_drm_fb.c
--- a/drivers/gpu/drm/rockchip/rockchip_drm_fb.c	2025-08-04 14:25:44.037839908 +0200
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_fb.c	2025-08-04 14:12:52.753134797 +0200
@@ -36,8 +36,7 @@ rockchip_fb_create(struct drm_device *de
 	const struct drm_format_info *info;
 	int ret;
 
-	info = drm_get_format_info(dev, mode_cmd->pixel_format,
-				   mode_cmd->modifier[0]);
+	info = drm_get_format_info(dev, mode_cmd);
 	if (!info)
 		return ERR_PTR(-ENOMEM);
 
diff -rupN a/drivers/gpu/drm/tegra/fb.c b/drivers/gpu/drm/tegra/fb.c
--- a/drivers/gpu/drm/tegra/fb.c	2025-08-04 14:25:44.041839871 +0200
+++ b/drivers/gpu/drm/tegra/fb.c	2025-08-04 14:12:52.757134759 +0200
@@ -134,9 +134,7 @@ struct drm_framebuffer *tegra_fb_create(
 					struct drm_file *file,
 					const struct drm_mode_fb_cmd2 *cmd)
 {
-	const struct drm_format_info *info = drm_get_format_info(drm,
-								 cmd->pixel_format,
-								 cmd->modifier[0]);
+	const struct drm_format_info *info = drm_get_format_info(drm, cmd);
 	struct tegra_bo *planes[4];
 	struct drm_gem_object *gem;
 	struct drm_framebuffer *fb;
diff -rupN a/include/drm/drm_fourcc.h b/include/drm/drm_fourcc.h
--- a/include/drm/drm_fourcc.h	2025-08-04 11:24:37.345124456 +0200
+++ b/include/drm/drm_fourcc.h	2025-08-04 14:12:52.757134759 +0200
@@ -54,6 +54,7 @@
 #endif
 
 struct drm_device;
+struct drm_mode_fb_cmd2;
 
 /**
  * struct drm_format_info - information about a DRM format
@@ -308,7 +309,7 @@ const struct drm_format_info *__drm_form
 const struct drm_format_info *drm_format_info(u32 format);
 const struct drm_format_info *
 drm_get_format_info(struct drm_device *dev,
-		    u32 pixel_format, u64 modifier);
+		    const struct drm_mode_fb_cmd2 *mode_cmd);
 uint32_t drm_mode_legacy_fb_format(uint32_t bpp, uint32_t depth);
 uint32_t drm_driver_legacy_fb_format(struct drm_device *dev,
 				     uint32_t bpp, uint32_t depth);
